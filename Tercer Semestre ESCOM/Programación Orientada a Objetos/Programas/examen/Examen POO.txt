ALUMNO: Meza Vargas Brandon David
GRUPO: 2CM1

1.- Modelar un Carrete (o rollo) de cable

-suponga que cada carrete viene con 100 m de cable

-el cable solo se vende al menudeo por metro (o sea no por carrete)

-Si hay suficiente cable entonces se debe cortar del carrete la cantidad de cable que pida el cliente

Modelado:
-----------------
carrete            
-----------------
cable
cant
-----------------
cortar(...)
cantCarrete(...)
hay(...)
-----------------

Codigo:

public class carrete {
    int cable;
    public carrete(){
        this.cable=100;
    }

    public void cortar(int cant){
        if(hay(cant)){
            cable-=cant;
        } 
        else  
            System.out.println("No puedes comprar mas de "+cable+ " metros de cable");
        

    }
    public Boolean hay(int cant){
        if(cant<=cable)
            return true;
        else   
            return false;
    }
    public void cantCarrete(){
        System.out.println("Quedan "+this.cable+" metros de cable");
    }
    
    public static void main(String[] args) {
        carrete c;
        Boolean b;
        c= new carrete();

        b=c.hay(20);
        System.out.println(b);
        c.cantCarrete();
        c.cortar(20);
        c.cantCarrete();

        //cortamos otros 30 metros del carrete
        b=c.hay(30);
        System.out.println(b);
        c.cantCarrete();
        c.cortar(20);
        c.cantCarrete();
    }
}

TAD
2.-Codificar en Java un tipo de dato abstracto (TAD) para vectores tridimensionales Vec3D

Si v1 = (x1, y1, z1) y v1 = (x2, y2, z2)

entonces
suma v1+v2=(x1+x2, y1+y2, z1+z2)
resta v1-v2=(x1-x2, y1-y2, z1-z2)
producto punto v1.v2= x1*x2 + y1*y2 + z1*z2 resultado escalar

Si v = (x, y, z) entonces modulo(v) = sqrt(x*x + y*y+z*z) = sqrt (productoPunto(v.v))
v1 = v2 si x1 = x2 y y1 = y2 y z1 = z2

Codificar el constructor

Este TAD debe tener las siguientes operaciones: sumar, restar, productoPunto, modulo, esIgual, imprimir

Modelado:
---------------
vec3D
---------------
x
y
z
---------------
sum(...)
res(...)
pPunto(...)
mod(...)
esIgual(...)
imprimir(...)
--------------
Codigo:

public class vec3D {
    Double x,y,z;

    public vec3D(Double x, Double y, Double z){
        this.x=x;
        this.y=y;
        this.z=z;
    }

    public vec3D sum(vec3D v){
        return new vec3D(x + v.x, y + v.y, z + v.z);
    }

    public vec3D res(vec3D v){
        return new vec3D(x - v.x, y - v.y, z - v.z);
    }

    public Double  pPunto(vec3D v){
        return ((x * v.x) + (y * v.y) + (z * v.z));
    }

    public Double mod(vec3D v){
        return Math.sqrt(pPunto(v));
    }

    public boolean esIgual(vec3D v){
        return (v.x == this.x) & (v.y == this.y) & (v.z == this.z);
    }

    public void imprimir(){
        System.out.println("(" + x + ", " +y+ ", " + z +")");
    }

    public static void main(String[] args) {
        vec3D v1,v2,v3,v4;
        Double res,m;
        Boolean b;
        v1 = new vec3D(5.0, 3.0, 7.0);
        v2 = new vec3D(5.0, 10.0, 7.0);

        System.out.println("¿Es igual?: ");
        b=v1.esIgual(v2);
        System.out.println(b);

        System.out.println("Suma: ");
        v3=v1.sum(v2);
        v3.imprimir();

        System.out.println("Resta: ");
        v4=v1.res(v2);
        v4.imprimir();
        System.out.println("Producto Punto: ");
        res=v1.pPunto(v2);
        System.out.println(res);

        System.out.println("Modulo: ");
        m=v1.mod(v2);
        System.out.println(m);
     
    }

}

GUI

3.-Codificar un applet que tenga un botón, tres campos de entrada y una etiqueta. 
Un campos de entrada es para las horas, otro para el numero de minutos y otro mas para el numero de 
segundos imprima el total de segundos transcurridos en la etiqueta si se presiona el boton. 
Ejemplo si se le dan 18 hrs con 3 min y 20 segundos el programa debe imprimir 65000 segundos (18*3600+3*60+20).

Modelado:
---------------------
guiSegundos
---------------------
hrs
min
b
s
lbl
---------------------
init()
actionPerformed(...)
---------------------

Codigo:
import java.awt.event.*;
import java.awt.*;
import java.applet.*;

public class gui extends Applet implements ActionListener{
    TextField hrs,min,s;
    Button b;
    Label lbl;
    
    public void init(){
        
        hrs=new TextField();
        add(hrs);
        min=new TextField();
        add(min);
        s=new TextField();
        add(s);
        b=new Button("Segundos");
        add(b);
        lbl= new Label("                            ");
        add(lbl);

        b.addActionListener(this);
    }

   
    public void actionPerformed(ActionEvent e){
        int horas, minu, segu, st;
        String seg;
        Button b = (Button)e.getSource();

        horas=Integer.parseInt(hrs.getText());
        minu=Integer.parseInt(min.getText());
        segu=Integer.parseInt(s.getText());

        st=horas*3600+minu*60+segu;
        seg= String.valueOf(st);
        lbl.setText(seg + " segundos en total");
      
    }

}

HTML para ejecutar el applet:

<html>
 
<body>
</body>
<applet code="gui.class" width="500" height="500">
    
</applet>
</html>